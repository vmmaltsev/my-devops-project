name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-test:
    runs-on: ubuntu-22.04  # Pin to Ubuntu 22.04

    permissions:
      security-events: write
      actions: read
      contents: read

    env:
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
      COVERAGE_PATH: htmlcov

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if [ -f app/requirements.txt ]; then
            pip install -r app/requirements.txt
          else
            echo "Requirements file not found!"
            exit 1
          fi

      - name: Start application
        run: |
          uvicorn app.src.main:app --host $APP_HOST --port $APP_PORT &
          sleep 5

      - name: Check application health
        run: |
          curl --retry 5 --retry-delay 3 --retry-connrefused http://localhost:$APP_PORT/health || {
            echo "Application health check failed!";
            exit 1;
          }

      - name: Ensure coverage directory exists
        run: mkdir -p ${{ github.workspace }}/htmlcov

      - name: Run tests with coverage
        run: |
          pytest app/tests/ --cov=app --cov-report=html:${{ github.workspace }}/htmlcov --cov-report=term --log-file=pytest.log

      - name: Verify coverage report exists
        run: |
          if [ -d "${{ github.workspace }}/htmlcov" ]; then
            echo "Coverage report found."
          else
            echo "Coverage report not found!"
            exit 1
          fi

      - name: List workspace contents (for debugging)
        run: ls -al ${{ github.workspace }}

      - name: Upload pytest logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-logs
          path: pytest.log

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ github.workspace }}/htmlcov

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image with Buildx
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache \
                              -t myapp:latest \
                              -t myapp:${{ github.sha }} \
                              app/

      - name: CodeQL Initialization
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3
